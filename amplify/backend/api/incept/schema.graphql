type User
  @model
  @auth(rules: [{allow: private, operations: [read]}, {allow: owner}]) {
  id: ID!
  name: String @index(name: "byName", queryField: "userByName")
  college: String
  degree: String @index(name: "byDegree", queryField: "userByDegree")
  email: String
  year: Int @index(name: "byYear", queryField: "userByYear")
  interests: [Interest] @manyToMany(relationName: "UserInterests")
  messages: [Message] @hasMany
  joinedClubs: [Club] @manyToMany(relationName: "UserClubs")
}

type Interest @model @auth(rules: [{allow: private}]) {
  id: ID!
  interestName: String
    @index(name: "byInterestName", queryField: "interestByInterestName")
  users: [User] @manyToMany(relationName: "UserInterests")
}

type Club
  @model
  @auth(rules: [{allow: private, operations: [read, update]}, {allow: owner}]) {
  id: ID
  clubName: String @index(name: "byName", queryField: "clubByName")
  clubDesc: String
  joinedUsers: [User] @manyToMany(relationName: "UserClubs")
  messages: [Message] @hasMany(indexName: "byClub", fields: ["id"])
}

type Message
  @model
  @auth(rules: [{allow: private, operations: [read]}, {allow: owner}]) {
  id: ID!
  content: String
  author: User
  clubID: ID! @index(name: "byClub", sortKeyFields: ["createdAt"])
  club: Club @belongsTo
  createdAt: String
}

type Announcement
  @model
  @auth(rules: [{allow: private, operations: [read]}, {allow: owner}]) {
  id: ID! @index(name: "announcementByDate", sortKeyFields: ["createdAt"])
  author: String
  content: String
  createdAt: String
}

type Invite
  @model
  @auth(rules: [{allow: private, operations: [read, update]}, {allow: owner}]) {
  id: ID!
  userID: ID!
  user: User
}
